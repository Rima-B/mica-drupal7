<?php
/*
 * @file code for obiba_mica_repository module
 * */

function obiba_mica_repository_menu() {
  $items = array();
  $items[ObibaSearchResources::MICA_REPOSITORY . '/taxonomies/_search/ws'] = array(
    'page callback' => 'obiba_mica_repository_taxonomies_search',
    'file' => 'obiba_mica_repository_services.inc',
    'access callback' => TRUE
  );
  $items[ObibaSearchResources::MICA_REPOSITORY . '/taxonomies/_filter/ws'] = array(
    'page callback' => 'obiba_mica_repository_taxonomies_filter',
    'file' => 'obiba_mica_repository_services.inc',
    'access callback' => TRUE
  );
  $items[ObibaSearchResources::MICA_REPOSITORY . '/%/_rql/%/ws'] = array(
    'page callback' => 'obiba_mica_repository_query',
    'file' => 'obiba_mica_repository_services.inc',
    'page arguments' => array(2, 4),
    'access callback' => TRUE
  );
  $items[ObibaSearchResources::MICA_REPOSITORY . '/variables/_coverage/%/ws'] = array(
    'page callback' => 'obiba_mica_repository_variable_coverage',
    'file' => 'obiba_mica_repository_services.inc',
    'page arguments' => array(4),
    'access callback' => TRUE
  );
  $items[ObibaSearchResources::MICA_REPOSITORY . '/variables/_coverage_download/%/ws'] = array(
    'page callback' => 'obiba_mica_repository_variable_coverage_download',
    'file' => 'obiba_mica_repository_services.inc',
    'page arguments' => array(4),
    'access callback' => TRUE
  );
  $items[ObibaSearchResources::MICA_REPOSITORY . '/taxonomy/%/_filter/ws'] = array(
    'page callback' => 'obiba_mica_angular_search_taxonomy_filter',
    'file' => 'obiba_mica_repository_services.inc',
    'page arguments' => array(3),
    'access callback' => TRUE
  );

  return $items;
}

/**
 * Implements hook_get_js().
 */
function obiba_mica_repository_get_js($weight_js) {
  $colors_options = obiba_mica_graphic_charts_colors_options_settings();
  $study_design_options =
    !empty($colors_options)?
      array_merge(array('legend' => array('position' => 'none')), $colors_options):
      array('legend' => array('position' => 'none'));
  $bio_samples_options =  !empty($colors_options)?
    array_merge(array('legend' => array('position' => 'right'), 'pieSliceTextStyle' => array('color' => variable_get_value('pie_slice_text_style_color'))), $colors_options):
    array('legend' => array('position' => 'right'), 'pieSliceTextStyle' => array('color' => variable_get_value('pie_slice_text_style_color')));
  $chart_options = array_merge(
    obiba_mica_graphic_charts_options_settings('geoChartOptions',
      array('graphics.country', 'graphics.nbr-studies'),
      'graphics.geo-chart-title',array('colorAxis' =>  $colors_options)),
    obiba_mica_graphic_charts_options_settings('studiesDesigns',
      array('graphics.study-design', 'graphics.nbr-studies'),
      'graphics.study-design-chart-title',$study_design_options),
    obiba_mica_graphic_charts_options_settings('biologicalSamples',
      array('graphics.bio-samples', 'graphics.nbr-studies'),
      t('graphics.bio-samples-chart-title'),$bio_samples_options)
  );

  drupal_add_js(array(
    'GraphicChartsOptions' => array(
      'ChartsOptions' => $chart_options,
    )
  ),
    'setting');
  if (current_path() == MicaClientPathProvider::REPOSITORY_SEARCH) {
    $module_path = drupal_get_path('module', 'obiba_mica_repository');
    $js = file_scan_directory($module_path . '/js/app', '/.*\.js$/', array('key' => 'name'));
    ksort($js);
    foreach ($js as $file_js) {
      drupal_add_js($file_js->uri, array(
        'type' => 'file',
        'scope' => 'footer',
        'weight' => ++$weight_js,
      ));
    }
  }
  return ++$weight_js;
}

/**
 * Implements hook_load_menus().
 */
function obiba_mica_repository_load_menus() {
  $items = array();

  $items[MicaClientPathProvider::REPOSITORY_SEARCH] = array(
    'access callback' => TRUE,
    'title' => variable_get('search_page_title', 'Search'),
    'module_caller' => 'obiba_mica_repository',
  );
  return $items;
}

/**
 * Implements hook_get_ng_module_to_load().
 */
function obiba_mica_repository_get_ng_module_to_load() {
  if (current_path() == MicaClientPathProvider::REPOSITORY_SEARCH) {
    return 'mica.ObibaSearch';
  }
  return FALSE;
}

/**
 * Implements hook_theme().
 */
function obiba_mica_repository_theme($existing, $type, $theme, $path) {
  $path_template = $path . '/templates';
  $path_views = $path . '/js/app/views';
  return array(
    'obiba_mica_repository_main_app' => array(
      'template' => 'obiba_mica_repository_main_app',
      'path' => $path_template,
    ),
    'obiba_angular_search_view_header' => array(
      'template' => 'obiba_angular_search_view_header',
      'path' => $path_views,
    ),
  );

}

/**
 * Main Search page
 */
function obiba_mica_repository_variable_page_search() {
  return theme('obiba_mica_repository_main_app', array());
}
