<?php
/**
 * @file
 * Obiba Auth file
 */

/**
 * Implements hook_menu().
 */
function obiba_auth_menu()
{
    global $user;
    $items = array();
    //cas_login_check();
    $items['admin/config/people/obiba'] = array(
        'title' => 'OBiBa Auth settings',
        'description' => 'Configure OBiBa central authentication services',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('obiba_auth_admin_settings'),
        'access arguments' => array('administer obiba'),
        'type' => MENU_NORMAL_ITEM,
        'file' => 'obiba_auth.admin.inc',
    );
    return $items;
}

/**
 * Implements hook_permission().
 */
function obiba_auth_permission()
{
    return array(
        'administer obiba' => array(
            'title' => t('Administer OBiBa'),
            'description' => t('Configure OBiBa Auth server and other settings.'),
            'restrict access' => TRUE,
        )
    );
}

/**
 * Implementation of hook_form_alter().
 * Change the normal form login form behaviour.
 */
function obiba_auth_form_user_login_alter(&$form, $form_state)
{
    dpm($form);
    unset($form['links']);
    $form['#validate'] = array('user_login_name_validate', 'user_login_authenticate_validate', 'obiba_auth_login_validate', 'user_login_final_validate');
}

/**
 * Implementation of hook_form_alter().
 * Change the normal form login block form behaviour.
 */
function obiba_auth_form_user_login_block_alter(&$form, $form_state)
{
    return obiba_auth_form_user_login_alter($form, $form_state);
}

/**
 * Implement hook_user_profile_form_alter() to disable the ability to change email address and
 * password for externally authenticated users.
 */
function obiba_auth_form_user_profile_form_alter(&$form, $form_state)
{
    if (strpos($form['#user']->name, '@') !== false) {
        $form['account']['name']['#disabled'] = TRUE;
        $form['account']['name']['#description'] = t('The username for this account cannot be changed');
        $form['account']['mail']['#disabled'] = TRUE;
        $form['account']['mail']['#description'] = t('This e-mail address for this account cannot be changed.');
        $form['account']['current_pass']['#disabled'] = TRUE;
        $form['account']['current_pass']['#description'] = t('Neither the email address or password for this account can be changed.');
        $form['account']['pass']['#disabled'] = TRUE;
        $form['account']['pass']['#description'] = t('The password for this account cannot be changed.');
    }
}

/**
 * The obiba_auth_auth() function attempts to authenticate a user off the external system using their e-mail address.
 */
function obiba_auth_login_validate($form, &$form_state)
{
    dpm($form_state);
    $username = $form_state['values']['name'];
    $password = $form_state['values']['pass'];
    if (!empty($username) && !empty($password)) {
        $response = obiba_auth_check_user($username, $password);
        dpm($response);
        if ($response != false) {
            user_external_login_register($username, 'obiba_auth');
            $account = user_external_load($username);
            $form_state['uid'] = $account->uid;
        }
    }
    // else drop through to the end and return nothing - Drupal will handle the rejection for us
}

function obiba_auth_check_user($username, $password)
{
    dpm($username);
    try {
        // authenticate
        $result = obiba_auth_realm_authenticate($username, $password);
        if ($result) {

            // authorize
            return true;
        }
        return false;
    } catch (Exception $e) {
        watchdog('prjauth', 'Error %error_message.', array('%error_message' => $e->faultstring), WATCHDOG_NOTICE);
        return false;
    }
}

function obiba_auth_realm_authenticate($username, $password)
{
    $agate_url = variable_get('agate_url','https://localhost:8444');
    $appli_name = variable_get('agate_application_name','drupal');
    $appli_key = variable_get('agate_application_key','changeit');

    $agate_client = new AgateClient($agate_url, $appli_name, $appli_key);

    $result = $agate_client->authenticate($username, $password);

    watchdog('obiba_auth', 'headers: %h', array('%h' => implode('//', $agate_client->getLastResponseHeaders())), WATCHDOG_DEBUG);

    return $result;
}

/**
 * Implements hook_init().
 *
 * Traps a page load to see if authentication is required.
 */
//function obiba_auth_init()
//{
//    global $user;
//
//    //dpm($user);
//}