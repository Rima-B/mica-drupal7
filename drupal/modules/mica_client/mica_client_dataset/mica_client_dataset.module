<?php


include_once('includes/mica_client_dataset_resource_facets_conf.inc');
function mica_client_dataset_menu() {
  $items = array();

  $items['mica/datasets'] = array(
    'title' => 'Datasets',
    'description' => t('Published datasets'),
    'page callback' => 'mica_client_dataset_get_datastes',
    'file' => 'mica_client_datasets-page-list.inc',
    'access callback' => TRUE,
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 3
  );

  $items['mica/datasets/harmonization-datasets'] = array(
    'title' => 'Harmonization Datasets',
    'description' => t('Published harmonization datasets'),
    'page callback' => 'mica_client_dataset_get_harmonization_datasets',
    'file' => 'mica_client_datasets-page-list.inc',
    'access callback' => TRUE,
//   'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 2
  );

  $items['variable-detail-statistics/%'] = array(
    // 'title' => t('Datasets Opal variables'),
    'access callback' => TRUE,
    'page callback' => 'mica_client_dataset_variable_get_ajax_statistics',
    'page arguments' => array(1),
    'weight' => 5,
    'file' => 'mica_client_variable-page-detail.inc',
  );


  $items['mica/datasets/study-datasets'] = array(
    'title' => 'Study Datasets',
    'page callback' => 'mica_client_dataset_get_study_datasets',
    'file' => 'mica_client_datasets-page-list.inc',
    'access callback' => TRUE,
    //  'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 3
  );

  $items['mica/variables_search/%'] = array(
    'title' => 'Variables Search',
    'description' => t('Search published variables'),
    'page callback' => 'mica_client_dataset_variable_page_search',
    'file' => 'mica_client_dataset-variable-page-search.inc',
    'access callback' => TRUE,
    'page arguments' => array(2)
  );

  $items['mica/dataset/%/%'] = array(
    'title' => 'Dataset',
    'page callback' => 'mica_client_dataset_page_detail',
    'file' => 'mica_client_dataset-page-detail.inc',
    'access callback' => TRUE,
    'page arguments' => array(3, 4),
  );

  $items['mica/variable/%/%'] = array(
    'title' => 'Variable',
    'page callback' => 'mica_client_variable_page_detail',
    'file' => 'mica_client_variable-page-detail.inc',
    'access callback' => TRUE,
    'page arguments' => array(3, 4),
  );
  return $items;
}

function mica_client_dataset_menu_link_alter(&$items) {
  if ($items['menu_name'] == 'main-menu') {
//    dpm($items);
  }
}

///**
// * Restrict access to /node
// */
//function mica_client_dataset_menu_alter(&$items) {
//  dpm($items);
//  $items['node']['access callback'] = FALSE;
//}


function mica_client_dataset_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  $links = array();
  //dpm($root_path);
  switch ($root_path) {
//    case 'mica/dataset/%/%':
//      if ($router_item['page_arguments'][0] == 'study') {
//        $title = t('Studies variables Search');
//      }
//      else {
//        $title = t('Datasets variables Search');
//      }
//      $links['mica/variables'] = array(
//
//        '#weight' => 30,
//        '#theme' => 'menu_local_action',
//        '#link' => array(
//          'title' => $title,
//          'href' => 'mica/variables_search/' . $router_item['page_arguments'][0],
//          'localized_options' => array(
////                  'query' => array(
////                    'f[0]' => 'search_api_combined_1:' . $node->nid
////                  ),
//            'attributes' => array(
//              'class' => 'highlight',
//            ),
//          ),
//        ),
//      );
//
//      break;

    case 'mica/datasets/harmonization-datasets':
      $links['mica/variables'] = array(

        '#weight' => 30,
        '#theme' => 'menu_local_action',
        '#link' => array(
          'title' => t('Datasets variables Search'),
          'href' => 'mica/variables_search/dataset',
          'localized_options' => array(
//                  'query' => array(
//                    'f[0]' => 'search_api_combined_1:' . $node->nid
//                  ),
            'attributes' => array(
              'class' => 'highlight',
            ),
          ),
        ),
      );

      break;

    case 'mica/datasets/study-datasets':
      $links['mica/variables'] = array(

        '#weight' => 30,
        '#theme' => 'menu_local_action',
        '#link' => array(
          'title' => t('Studies variables Search'),
          'href' => 'mica/variables_search/study',
          'localized_options' => array(
//                  'query' => array(
//                    'f[0]' => 'search_api_combined_1:' . $node->nid
//                  ),
            'attributes' => array(
              'class' => 'highlight',
            ),
          ),
        ),
      );

      break;

  }

  $data['actions']['output'] = array_merge($data['actions']['output'], $links);
}

/**
 * Implements hook_theme().
 *
 * copy '<modules>/mica_client_dataset/templates/'   files in  your customized theme  '<YOUR_THEME>/templates/' path
 * you can modify default display of listed page templates by rearrange block field for example
 * don't forget to clear the theme registry.
 *
 */

function mica_client_dataset_theme($existing, $type, $theme, $path) {
  $path_theme = $path . '/templates';
  return array(
    'mica_client_datasets-list' => array('template' => 'mica_client_datasets-list', 'path' => $path_theme),
    'mica_client_datasets-detail' => array('template' => 'mica_client_datasets-detail', 'path' => $path_theme),
    'mica_client_datasets-tables' => array('template' => 'mica_client_datasets-tables', 'path' => $path_theme),
    'mica_client_variable-detail' => array('template' => 'mica_client_variable-detail', 'path' => $path_theme),
    'block__mica_client_dataset' => array(
      'variables' => array('block' => array()),
      'template' => 'block--mica_client_dataset',
      'path' => $path_theme
    ),
    'mica_client_variable_block_search' => array(
      'template' => 'mica_client_variable_block_search',
      'path' => $path_theme
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function mica_client_dataset_block_info() {
  $i = 0 - count(mica_client_dataset_resource_return_facets());
  foreach (mica_client_dataset_resource_return_facets() as $key_facet => $facet) {
    $blocks['search-' . $key_facet] = mica_client_dataset_block_info_construc($facet['title'], $i);
    --$i;
  }

  $blocks['facet-search-variables'] = array(
    'info' => t('Facet search variables'),
    'title' => t('Facet search variables'),
    'status' => 1,
    'region' => 'facets',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/variables_search/*',
    'weight' => --$i,
    'custom' => 1,
  );

  $blocks['facet-search-datasets'] = array(
    'info' => t('Facet search datasets'),
    'title' => t('Facet search datasets'),
    'status' => 1,
    'region' => 'facets',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/variables_search/*',
    'weight' => --$i,
    'custom' => 1,
  );

  $blocks['facet-search'] = array(
    'info' => t('Facet search'),
    'title' => t('Facet search'),
    'status' => 1,
    'region' => 'facets',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/variables_search/*',
    'weight' => --$i,
    'custom' => 1,
  );


  return $blocks;
}


function mica_client_dataset_block_info_construc($facet_title, $facet_weight) {
  $facet_title_array = explode('-', $facet_title);
  return array(
    'info' => t('Facet search @title', array('@title' => drupal_strtolower(drupal_strtolower($facet_title_array[0] . ' ' . $facet_title_array[1])))),
    'title' => t('@title', array('@title' => $facet_title_array[1])),
    'status' => 0,
//    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '',
    'weight' => $facet_weight,
    'custom' => 1,
  );
}

/**
 * Implements hook_block_view().
 */
function mica_client_dataset_block_view($delta = '') {
  switch ($delta) {
    case 'facet-search':
      if (!empty($_SESSION['variable']['request']) && $_SESSION['variable']['request'] == 'dataset') {
        $output = _mica_client_dataset_get_facets_block_by_dto_type('mica_client_dataset', 'variable', 'child');
      }
      else {
        $output = '<ul class="nav nav-tabs" role="tablist">
  <li class="active"><a href="#variable" role="tab" data-toggle="tab">' . t('Variables') . '</a></li>
  <li><a href="#study" role="tab" data-toggle="tab">' . t('Studies') . '</a></li>

</ul>

<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane active" id="variable">'
          . _mica_client_dataset_get_facets_block_by_dto_type('mica_client_dataset', 'variable', 'child') . '</div>
  <div class="tab-pane" id="study">' . _mica_client_dataset_get_facets_block_by_dto_type('mica_client_study', 'study', 'parent') . '</div>

</div>';
      }
      $block['subject'] = t('Facet search variables');
      $block['content'] = $output;
      return $block;
    default:
      foreach (mica_client_dataset_resource_return_facets() as $key_facet => $facet) {
        if (user_access('access content') && $delta == 'search-' . $key_facet) { //good idea to check user perms here
          $facet_title_array = explode('-', $facet['title']);
          $block['subject'] = $facet_title_array;
          $block['content'] = mica_client_dataset_precess_block_theme('search-' . $facet['aggr-pars']);
          return $block;
        }
      }
  }
}

function _mica_client_dataset_get_facets_block_by_dto_type($dto_type, $type, $parent_child = NULL) {
  $blockto_render = array();
  $facets = mica_client_dataset_resource_return_facets($dto_type);
  foreach ($facets as $key_facet => $facet) {
    $blockto_render[$dto_type . '_search-' . $key_facet] =
      block_load($dto_type, 'search-' . $key_facet);
    $facet_title_array = explode('-', $facet['title']);
    $blockto_render[$dto_type . '_search-' . $key_facet]->subject = $facet_title_array[1];
    $blockto_render[$dto_type . '_search-' . $key_facet]->content['#markup'] = mica_client_commons_precess_block_theme('search-' . $facet['aggr-pars'], $type, $parent_child);
  }

  $block_output = _block_get_renderable_array($blockto_render);
  return drupal_render($block_output);
}


function mica_client_dataset_get_all_datasets_studies($study_id) {

  $output = NULL;
  $dataset_resource = new MicaDatasetResource();
  $datasets = array();

  $datasets = array_merge($dataset_resource->get_datasetes('study-datasets', $study_id), $dataset_resource->get_datasetes('harmonization-datasets', $study_id));

  if (!empty($datasets)) {
    $datasets_tab = mica_client_dataset_get_datasets_list($datasets);
    $output .= '<section> <h3>' . t('Datasets') . '</h3><div>';
    $output .= mica_client_dataset_get_datasets_tables($datasets_tab);
    $output .= '</div></section>';
  }

  //dpm($harmonization_datasets_dto);
  // dpm($study_datasets_dto);
  return $output;
}

/*
 * Format Datasets tables  detail
 * */
function mica_client_dataset_get_datasets_tables($datasets) {
  return theme('mica_client_datasets-list', array("context_datasets_list" => $datasets));
}

function mica_client_dataset_get_datasets_list($datasets) {
  $dataset_rows = array();
  foreach ($datasets as $key_dataset => $dataset_dto) {
    $dataset_description = NULL;
    if (!empty($dataset_dto->description)) {
      $dataset_description = theme('box', truncate_utf8(mica_client_commons_get_localized_field($dataset_dto, 'description'), 50, TRUE, TRUE));
    }
    $dataset_name = mica_client_commons_get_localized_field($dataset_dto, 'name');
    $type = $dataset_dto->hasExtension('obiba.mica.StudyDatasetDto.type') ? 'study' : 'dataset';
    $type_name = $dataset_dto->hasExtension('obiba.mica.StudyDatasetDto.type') ? 'Study dataset' : 'Harmonization dataset';
    $dataset_rows[$key_dataset] = array(
      'data' => array(
        'label' => l($dataset_name, 'mica/dataset/' . mica_client_commons_to_slug($dataset_name) . '/' . $type . '/' . $dataset_dto->id),
        'type' => t($type_name),
        'desc' => !empty($dataset_description) ? $dataset_description : '-'
      )
    );
  }

  $dataset['dataset-tab'] = theme(
    'table',
    array(
      'header' => array(t('Name'), t('Type'), t('Description')),
      'rows' => $dataset_rows,
      'empty' => t('No dataset found'),
      'sticky' => FALSE
    )
  );
  return $dataset;
}

