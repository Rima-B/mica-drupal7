<?php
/**
 * @file
 * Mica studies file
 */
require_once(drupal_get_path('module', 'mica_protobuf') . '/mica_protobuf-queryDto.inc');


function mica_study_menu() {
  $items = array();
  $items['mica/studies'] = array(
    'title' => t('Mica studies'),
    'description' => t('Mica studies'),
    'page callback' => 'mica_study_page_list',
    'file' => 'mica_study-page-list.inc',
    'access callback' => TRUE,
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM
  );
  $items['mica/study/%'] = array(
    'title' => t('Mica study detail'),
    'page callback' => 'mica_study_page_detail',
    'file' => 'mica_study-page-detail.inc',
    'access callback' => TRUE,
    'page arguments' => array(2),
  );
  return $items;
}

///**
// * Implements hook_menu_local_tasks_alter().
// */
//function mica_study_menu_local_tasks_alter(&$data, $router_item, $root_path) {
//  $links = array();
//  switch ($root_path) {
//    case 'mica/study/%/%':
//      $links['mica'] = array(
//        '#theme' => 'menu_local_action',
//        '#link' => array(
//          'page callback' => 'mica_study_detail_study',
//          'href' => 'mica',
//        ),
//      );
//  }
//}

/**
 * Implements hook_theme().
 */
function mica_study_theme($existing, $type, $theme, $path) {
  return array(
    'mica_study_list' => array(
      'template' => '/mica_study-list',
    ),
    'mica_study_detail' => array(
      'template' => '/mica_study-detail',
    ),
  );
}

/*
 * Parse the field to correct local lang
 * @param $std_study
 *  Study Dto object
 * @param $std_study_field
 *  Field to convert to correct lang
 * @return
 *  Field value in a correct local lang
 * */
function mica_study_get_local($study, $field) {
  global $language;
  $value = NULL;
  foreach ($study->{$field} as $field) {
    if (!empty($language->language) && $language->language == $field->lang) {
      return $field->value;
    }
    elseif ($field == 'en') {
      $value = $field->value;
    }
    else {
      $value = $field->value;
    }
  }
  return $value;
}