<?php
/**
 * @file
 * Mica studies file
 */


function mica_client_study_menu() {
  $items = array();

  $items['mica/studies'] = array(
    'title' => t('Studies'),
    'description' => t('Published studies'),
    'page callback' => 'mica_client_study_page_list',
    'file' => 'mica_client_study-page-list.inc',
    'access callback' => TRUE,
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM
  );

  $items['mica/studies_search/%'] = array(
    'title' => t('Studies Search'),
    'description' => t('Search published studies'),
    'page callback' => 'mica_client_study_page_search',
    'file' => 'mica_client_study-page-search.inc',
    'access callback' => TRUE,
    'page arguments' => array(2)
  );

  $items['mica/study/%'] = array(
    'title' => t('Mica study detail'),
    'page callback' => 'mica_client_study_page_detail',
    'file' => 'mica_client_study-page-detail.inc',
    'access callback' => TRUE,
    'page arguments' => array(3),
  );
  return $items;
}

function mica_client_study_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  $links = array();
  switch ($root_path) {
    case 'mica/studies':
      $links['mica/studies_search'] = array(
        '#weight' => 30,
        '#theme' => 'menu_local_action',
        '#link' => array(
          'title' => t('Studies Search'),
          'href' => 'mica/studies_search/_all',
          'localized_options' => array(
//                  'query' => array(
//                    'f[0]' => 'search_api_combined_1:' . $node->nid
//                  ),
            'attributes' => array(
              'class' => 'highlight',
            ),
          ),
        ),
      );

      break;
  }

  $data['actions']['output'] = array_merge($data['actions']['output'], $links);
}

/**
 * Implements hook_requirements().
 */

//function mica_client_study_requirements($phase) {
//  $requirements = array();
//  // Ensure translations do not break at install time
//  $t = get_t();
//  $requirements['micatimelines'] = array(
//    'title' => $t('Time lines  Library'),
//  );
//  $libraries = libraries_get_libraries();
//  if (isset($libraries['micatimelines'])) {
//    $requirements['micatimelines']['value'] = $t('Installed');
//    $requirements['micatimelines']['severity'] = REQUIREMENT_OK;
//  }
//  else {
//    $requirements['micatimelines']['value'] = $t('Not Installed');
//    $requirements['micatimelines']['severity'] = REQUIREMENT_ERROR;
//    $requirements['micatimelines']['description'] = $t('Please install the the time lines library %url.', array('%url' => 'http://obiba.org.com'));
//  }
//
//  return $requirements;
//}

/**
 * Implements hook_theme().
 *
 * copy '<modules>/mica_client_study/templates/'   files in  yor customized theme  '<YOUR_THEME>/templates/' path
 * you can modify default display of listed page templates by rearrange block field for example
 * don't forget to clear the theme registry.
 *
 */

function mica_client_study_theme($existing, $type, $theme, $path) {
  $path_theme = $path . '/templates';
  return array(
    'mica_client_study_list' => array('template' => 'mica_client_study-list', 'path' => $path_theme),
    'mica_client_study_search' => array('template' => 'mica_client_study-search', 'path' => $path_theme),
    'mica_client_study_detail' => array('template' => 'mica_client_study-detail', 'path' => $path_theme),
    'mica_population_detail' => array('template' => 'mica_client_study-population-detail', 'path' => $path_theme),
    'mica_dce_detail' => array('template' => 'mica_client_study-dce-detail', 'path' => $path_theme),
    'mica_client_study_attachments' => array('template' => 'mica_client_study_attachments', 'path' => $path_theme),
    'mica_client_study_block_search' => array('template' => 'mica_client_study_block_search', 'path' => $path_theme)
  );
}

/**
 * @param $gender_val
 *
 * @return text value gender
 */
function mica_client_study_get_gender($gender_val) {
  switch ($gender_val) {
    case 0:
      return t('Men');
    case 1:
      return t('Women');
  }
}

function mica_client_study_get_dce_property($dce, $property, $default) {
  if (isset($dce['data']) && isset($dce['data'][$property])) {
    return $dce['data'][$property];
  }
  if (isset($dce[$property])) {
    return $dce[$property];
  }
  return $default;
}

function mica_client_study_sort_dce($x, $y) {
  $x_start = mica_client_commons_convert_to_month(
    mica_client_study_get_dce_property($x, 'start_year', 0),
    mica_client_study_get_dce_property($x, 'start_month', 0));

  $y_start = mica_client_commons_convert_to_month(
    mica_client_study_get_dce_property($y, 'start_year', 0),
    mica_client_study_get_dce_property($y, 'start_month', 0));

  if ($x_start === $y_start) {
    $x_end = mica_client_commons_convert_to_month(
      mica_client_study_get_dce_property($x, 'end_year', 0),
      mica_client_study_get_dce_property($x, 'end_month', 0));

    $y_end = mica_client_commons_convert_to_month(
      mica_client_study_get_dce_property($y, 'end_year', 0),
      mica_client_study_get_dce_property($y, 'end_month', 0));

    if ($x_end === $y_end) {
      $x_created = mica_client_study_get_dce_property($x, 'created', 0);
      $y_created = mica_client_study_get_dce_property($y, 'created', 0);
      if ($x_created === $y_created) {
        return 0;
      }
      return $x_created < $y_created ? -1 : 1;
    }
    return $x_end < $y_end ? -1 : 1;
  }
  return $x_start < $y_start ? -1 : 1;
}

function mica_client_study_get_attachment_url($study_id, $attachment) {
  return sprintf("%s/ws/draft/study/%s/file/%s/_download",
    variable_get('mica_url', 'https://localhost:8445'),
    $study_id,
    $attachment->id);
}

/**
 * Implements hook_block_info().
 */
function mica_client_study_block_info() {
  $blocks['search-methods-designs'] = array(
    'info' => t('Facet search Study Design'),
    'title' => t('STUDY DESIGN'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -12,
    'custom' => 1,
  );

  $blocks['search-populations-countriesIso'] = array(
    'info' => t('Facet search country of residence'),
    'title' => t('COUNTRY OF RESIDENCE'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -11,
    'custom' => 1,
  );

  $blocks['search-populations-ageMin'] = array(
    'info' => t('Facet search minimum age'),
    'title' => t('MINIMUM AGE'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -10,
    'custom' => 1,
  );

  $blocks['search-populations-ageMax'] = array(
    'info' => t('Facet search maximum age'),
    'title' => t('MAXIMUM AGE'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -9,
    'custom' => 1,
  );

  $blocks['search-populations-gender'] = array(
    'info' => t('Facet search by gender'),
    'title' => t('GENDER'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -8,
    'custom' => 1,
  );

  $blocks['search-participant-number'] = array(
    'info' => t('Facet search number of participants'),
    'title' => t('TARGET NUMBER OF PARTICIPANTS'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -7,
    'custom' => 1,
  );

  $blocks['search-parti-samples-number'] = array(
    'info' => t('Facet search number of participants with samples'),
    'title' => t('TARGET NUMBER OF PARTICIPANTS WITH SAMPLES'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -6,
    'custom' => 1,
  );


  $blocks['search-methods-recruitments'] = array(
    'info' => t('Facet search Recruitmenet target'),
    'title' => t('RECRUITMENT TARGET'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -5,
    'custom' => 1,
  );


  $blocks['search-access'] = array(
    'info' => t('Facet search access'),
    'title' => t('ACCESS'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -4,
    'custom' => 1,
  );


  $blocks['search-start'] = array(
    'info' => t('Facet search Date start'),
    'title' => t('DATE START'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -3,
    'custom' => 1,
  );

  $blocks['search-end'] = array(
    'info' => t('Facet search Date end'),
    'title' => t('DATE END'),
    'status' => 1,
    'region' => 'sidebar_first',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '*mica/studies_search*',
    'weight' => -2,
    'custom' => 1,
  );


  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function mica_client_study_block_view($delta = '') {
  switch ($delta) {

    case 'search-methods-designs':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('STUDY DESIGN');
        $block['content'] = mica_client_study_precess_block_theme($delta);
      }
      return $block;

    case 'search-populations-countriesIso':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('COUNTRY OF RESIDENCE');
        $block['content'] = mica_client_study_precess_block_theme('search-populations-selectionCriteria-countriesIso');
      }
      return $block;

    case 'search-populations-ageMin':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('MINIMUM AGE');
        $block['content'] = mica_client_study_precess_block_theme('search-populations-selectionCriteria-ageMin');
      }
      return $block;

    case 'search-populations-ageMax':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('MAXIMUM AGE');
        $block['content'] = mica_client_study_precess_block_theme('search-populations-selectionCriteria-ageMax');
      }
      return $block;

    case 'search-populations-gender':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('GENDER');
        $block['content'] = mica_client_study_precess_block_theme('search-populations-selectionCriteria-gender');
      }
      return $block;

    case 'search-participant-number':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('TARGET NUMBER OF PARTICIPANTS');
        $block['content'] = mica_client_study_precess_block_theme('search-numberOfParticipants-participant-number');
      }
      return $block;

    case 'search-parti-samples-number':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('TARGET NUMBER OF PARTICIPANTS WITH SAMPLES');
        $block['content'] = mica_client_study_precess_block_theme('search-numberOfParticipants-sample-number');
      }
      return $block;


    case 'search-methods-recruitments':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('RECRUITMENT TARGET');
        $block['content'] = mica_client_study_precess_block_theme($delta);
      }
      return $block;

    case 'search-access':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('ACCESS');
        $block['content'] = mica_client_study_precess_block_theme($delta);
      }
      return $block;

    case 'search-start':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('DATE START');
        $block['content'] = mica_client_study_precess_block_theme($delta);
      }
      return $block;

    case 'search-end':
      if (user_access('access content')) { //good idea to check user perms here
        $block['subject'] = t('DATE END');
        $block['content'] = mica_client_study_precess_block_theme($delta);
      }
      return $block;

  }
}

function mica_client_study_precess_block_theme($block_delta) {
  $items = array();
  $agregation_facet = NULL;
  if (!empty($block_delta)) {
    $agregation_facet = key(mica_client_study_get_dto_facet_aggs($block_delta));
    $terms_aggregations = current(mica_client_study_get_dto_facet_aggs($block_delta));
    if (!empty($terms_aggregations)) {
      foreach ($terms_aggregations as $term) {
        $items[$term->key] = array(
          '#markup' => '<div id="checkthebox" class="terms_checkbox" term="' . $agregation_facet . '-' . $term->key . '"><input type="checkbox" name="' .
            $agregation_facet . '[]" value="' . $agregation_facet . '.' . $term->key . '" id="' .
            $agregation_facet . '-' . $term->key . '" >' .
            //  '<a href="#"  disabled="disabled" id="checkthebox" term="'. $agregation_facet . '-' . $term->key.'" >'.
            $term->key . '(' . $term->count . ') </div>'
        );
      }
    }
  }
  return theme('mica_client_study_block_search', array('items' => $items, 'formId' => $agregation_facet));
}

function mica_client_study_get_dto_facet_aggs($tab_block) {
  foreach ($_SESSION['aggregations'] as $key_tab => $facet) {
    if (is_int($key_tab)) {
      $facet_build['search-' . $facet->aggregation][$facet->aggregation] = !empty($facet->termsAggregations) ? $facet->termsAggregations : NULL;
    }
  }
  return $facet_build[$tab_block];
}

/**
 * Implements hook_init().
 */
function mica_client_study_init() {
  //load the settings
  if (module_exists('collapsiblock')) {
    global $theme;
    $current_theme = $theme ? $theme : variable_get('theme_default', 'garland');
    variable_set(str_replace('/', '_', 'theme_' . $current_theme . '_settings'),
      array(
        'collapsiblock_block' => 'section.block',
        'collapsiblock_content' => 'div.block-content'
      ));
    $theme_settings = variable_get(str_replace('/', '_', 'theme_' . $current_theme . '_settings'), array());
    $theme_settings = array_merge(collapsiblock_default_settings(), $theme_settings, array());
    drupal_add_js(array(
      'collapsiblock' => array(
        'blocks' => variable_get('collapsiblock_settings', array()),
        'default_state' => variable_get('collapsiblock_default_state', 1),
        'slide_type' => variable_get('collapsiblock_slide_type', 1),
        'slide_speed' => variable_get('collapsiblock_slide_speed', 200),
        'block_title' => $theme_settings['collapsiblock_title'],
        'block' => $theme_settings['collapsiblock_block'],
        'block_content' => $theme_settings['collapsiblock_content'],
      )
    ), array(
      'type' => 'setting'
    ,
      'scope' => JS_DEFAULT
    ));
  }
}




