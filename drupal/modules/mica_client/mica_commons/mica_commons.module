<?php

/**
 * Converts a string to a slug, for use in URLs or CSS classes. This function properly replaces
 *  letters with accents with their non-accented counterparts.
 *
 * @param string The string to convert.
 * @return string The slug.
 */
function mica_commons_to_slug($string)
{
    $string = str_replace(array('/', ' '), '-', $string);
    $accents = '/&([A-Za-z]{1,2})(tilde|grave|acute|circ|cedil|uml|lig);/';
    return urlencode(strtolower(preg_replace($accents, '$1', htmlentities(utf8_decode($string)))));
}

/**
 * @param $std The object with localized fields
 * @param $field The localized field
 * @param $lang
 * @return the localized value for this field, with this priority order: $lang, $language->language, 'en' or the first other locale found
 */
function mica_commons_get_localized_field($std, $field, $lang = NULL)
{
    global $language;
    if (empty($lang)) {
        $lang = $language->language;
    }
   // $lang='fr';//dpm($std);
    $value = NULL;
    if (!empty($std->{$field})) {
        foreach ($std->{$field} as $field_value) {
            if (!empty($lang) && $lang == $field_value->lang) {
                return $field_value->value;
            } elseif ($field_value->lang == 'en') {
                $value = $field_value->value;
            } else {
                $value = $field_value->value;
            }
        }
    }
    return $value;
}

/**
 * @param $limit
 *
 * @return text 'no limit' fin $limit is Null
 */
function get_if_no_limite($limit){
    if(!empty($limit)){
        return t('No limit');
    }
}