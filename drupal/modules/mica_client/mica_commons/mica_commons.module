<?php

/**
 * Converts a string to a slug, for use in URLs or CSS classes. This function properly replaces
 *  letters with accents with their non-accented counterparts.
 *
 * @param string The string to convert.
 * @return string The slug.
 */
function mica_commons_to_slug($string)
{
    $string = str_replace(array('/', ' '), '-', $string);
    $accents = '/&([A-Za-z]{1,2})(tilde|grave|acute|circ|cedil|uml|lig);/';
    return urlencode(strtolower(preg_replace($accents, '$1', htmlentities(utf8_decode($string)))));
}

/**
 * @param $std The object with localized fields
 * @param $field The localized field
 * @param $lang
 * @return the localized value for this field, with this priority order: $lang, $language->language, 'en' or the first other locale found
 */
function mica_commons_get_localized_field($std, $field, $lang = NULL)
{
    global $language;
    if (empty($lang)) {
        $lang = $language->language;
    }
    //  $lang='fr';//dpm($std);
    $value = NULL;
    if (!empty($std->{$field})) {
        foreach ($std->{$field} as $field_value) {
            if (!empty($lang) && $lang == $field_value->lang) {
                return $field_value->value;
            } elseif ($field_value->lang == 'en') {
                $value = $field_value->value;
            } else {
                $value = $field_value->value;
            }
        }
    }
    return $value;
}

/**
 * @param $std The object with localized fields
 * @param $field The localized field
 * @param $lang
 * @return the localized value for this field, with this priority order: $lang, $language->language, 'en' or the first other locale found
 */

function mica_commons_get_localized_dtos_field($std, $field, $lang = NULL)
{
    $value = array();
    foreach ($std->{$field} as $items) {
        $value[] = mica_commons_get_localized_field($items, 'localizedStrings');
    }
    return $value;
}

/**
 * @param $limit
 *
 * @return text 'no limit' fin $limit is Null
 */
function mica_commons_get_if_no_limite($limit)
{
    if (!empty($limit)) {
        return t('No limit');
    }
}

/**
 * @param $gender_val
 *
 * @return text value gender
 */
function mica_commons_get_gender($gender_val)
{
    if ($gender_val === 0) {
        return t('Men');
    }
    if ($gender_val === 1) {
        return t('Women');
    }
}

/*
 * @param $iso_country
 * @return CamalCase Country name
 * */
function mica_commons_iterate_field($fields, $callback = NULL, $parameters=NULL, $method=null)
{
    $i = 0;
    $total_item = count($fields);
    foreach ($fields as $field) {
        if (!empty($callback)) {
            if(empty($parameters)){
            print   call_user_func($callback, $field);
            }
            elseif(empty($method)){
                print   call_user_func_array($callback, array($field,$parameters));
            }
            else{
                print   call_user_func_array($callback, array($field,$parameters))->{$method};
            }

        } else {
            print $field;
        }
        if ($i + 1 < $total_item) {
            print ', ';
        }
        $i++;
    }

}

/*
 * @param $iso_country
 * @return CamalCase Country name
 * */
function mica_commons_get_country_from_iso($iso_contry)
{
    $countries = array(
        'AFG' => 'AFGHANISTAN',
        'ALB' => 'ALBANIA',
        'DZA' => 'ALGERIA',
        'ASM' => 'AMERICAN SAMOA',
        'ALA' => 'Aland Islands',
        'AND' => 'ANDORRA',
        'AGO' => 'ANGOLA',
        'AIA' => 'ANGUILLA',
        'ATA' => 'ANTARCTICA',
        'ATG' => 'ANTIGUA AND BARBUDA',
        'ARG' => 'ARGENTINA',
        'ARM' => 'ARMENIA',
        'ABW' => 'ARUBA',
        'AUS' => 'AUSTRALIA',
        'AUT' => 'AUSTRIA',
        'AZE' => 'AZERBAIJAN',
        'BHS' => 'BAHAMAS',
        'BHR' => 'BAHRAIN',
        'BGD' => 'BANGLADESH',
        'BRB' => 'BARBADOS',
        'BLR' => 'BELARUS',
        'BEL' => 'BELGIUM',
        'BLZ' => 'BELIZE',
        'BEN' => 'BENIN',
        'BMU' => 'BERMUDA',
        'BTN' => 'BHUTAN',
        'BOL' => 'BOLIVIA',
        'BIH' => 'BOSNIA AND HERZEGOWINA',
        'BWA' => 'BOTSWANA',
        'BVT' => 'BOUVET ISLAND',
        'BRA' => 'BRAZIL',
        'IOT' => 'BRITISH INDIAN OCEAN TERRITORY',
        'BRN' => 'BRUNEI DARUSSALAM',
        'BGR' => 'BULGARIA',
        'BFA' => 'BURKINA FASO',
        'BDI' => 'BURUNDI',
        'KHM' => 'CAMBODIA',
        'CMR' => 'CAMEROON',
        'CAN' => 'CANADA',
        'CPV' => 'CAPE VERDE',
        'CYM' => 'CAYMAN ISLANDS',
        'CAF' => 'CENTRAL AFRICAN REPUBLIC',
        'TCD' => 'CHAD',
        'CHL' => 'CHILE',
        'CHN' => 'CHINA',
        'CXR' => 'CHRISTMAS ISLAND',
        'CCK' => 'COCOS ISLANDS',
        'COL' => 'COLOMBIA',
        'COM' => 'COMOROS',
        'COG' => 'CONGO',
        'COD' => 'CONGO, THE DRC',
        'COK' => 'COOK ISLANDS',
        'CRI' => 'COSTA RICA',
        'CIV' => 'COTE D IVOIRE',
        'HRV' => 'CROATIA',
        'CUB' => 'CUBA',
        'CYP' => 'CYPRUS',
        'CZE' => 'CZECH REPUBLIC',
        'DNK' => 'DENMARK',
        'DJI' => 'DJIBOUTI',
        'DMA' => 'DOMINICA',
        'DOM' => 'DOMINICAN REPUBLIC',
        'TMP' => 'EAST TIMOR',
        'ECU' => 'ECUADOR',
        'EGY' => 'EGYPT',
        'SLV' => 'EL SALVADOR',
        'GNQ' => 'EQUATORIAL GUINEA',
        'ERI' => 'ERITREA',
        'EST' => 'ESTONIA',
        'ETH' => 'ETHIOPIA',
        'FLK' => 'FALKLAND ISLANDS',
        'FRO' => 'FAROE ISLANDS',
        'FJI' => 'FIJI',
        'FIN' => 'FINLAND',
        'FRA' => 'FRANCE',
        'FXX' => 'FRANCE, METROPOLITAN',
        'GUF' => 'FRENCH GUIANA',
        'PYF' => 'FRENCH POLYNESIA',
        'ATF' => 'FRENCH SOUTHERN TERRITORIES',
        'GAB' => 'GABON',
        'GMB' => 'GAMBIA',
        'GEO' => 'GEORGIA',
        'DEU' => 'GERMANY',
        'GHA' => 'GHANA',
        'GIB' => 'GIBRALTAR',
        'GRC' => 'GREECE',
        'GRL' => 'GREENLAND',
        'GRD' => 'GRENADA',
        'GLP' => 'GUADELOUPE',
        'GUM' => 'GUAM',
        'GTM' => 'GUATEMALA',
        'GIN' => 'GUINEA',
        'GNB' => 'GUINEA-BISSAU',
        'GUY' => 'GUYANA',
        'HTI' => 'HAITI',
        'HMD' => 'HEARD AND MC DONALD ISLANDS',
        'VAT' => 'HOLY SEE (VATICAN CITY STATE)',
        'HND' => 'HONDURAS',
        'HKG' => 'HONG KONG',
        'HUN' => 'HUNGARY',
        'ISL' => 'ICELAND',
        'IND' => 'INDIA',
        'IDN' => 'INDONESIA',
        'IRN' => 'IRAN',
        'IRQ' => 'IRAQ',
        'IRL' => 'IRELAND',
        'ISR' => 'ISRAEL',
        'ITA' => 'ITALY',
        'JAM' => 'JAMAICA',
        'JPN' => 'JAPAN',
        'JOR' => 'JORDAN',
        'KAZ' => 'KAZAKHSTAN',
        'KEN' => 'KENYA',
        'KIR' => 'KIRIBATI',
        'PRK' => 'D.P.R.O. KOREA',
        'KOR' => 'REPUBLIC OF KOREA',
        'KWT' => 'KUWAIT',
        'KGZ' => 'KYRGYZSTAN',
        'LAO' => 'LAOS',
        'LVA' => 'LATVIA',
        'LBN' => 'LEBANON',
        'LSO' => 'LESOTHO',
        'LBR' => 'LIBERIA',
        'LBY' => 'LIBYAN ARAB JAMAHIRIYA',
        'LIE' => 'LIECHTENSTEIN',
        'LTU' => 'LITHUANIA',
        'LUX' => 'LUXEMBOURG',
        'MAC' => 'MACAU',
        'MKD' => 'MACEDONIA',
        'MDG' => 'MADAGASCAR',
        'MWI' => 'MALAWI',
        'MYS' => 'MALAYSIA',
        'MDV' => 'MALDIVES',
        'MLI' => 'MALI',
        'MLT' => 'MALTA',
        'MHL' => 'MARSHALL ISLANDS',
        'MTQ' => 'MARTINIQUE',
        'MRT' => 'MAURITANIA',
        'MUS' => 'MAURITIUS',
        'MYT' => 'MAYOTTE',
        'MEX' => 'MEXICO',
        'FSM' => 'FEDERATED STATES OF MICRONESIA',
        'MDA' => 'REPUBLIC OF MOLDOVA',
        'MCO' => 'MONACO',
        'MNG' => 'MONGOLIA',
        'MSR' => 'MONTSERRAT',
        'MAR' => 'MOROCCO',
        'MOZ' => 'MOZAMBIQUE',
        'MMR' => 'MYANMAR',
        'NAM' => 'NAMIBIA',
        'NRU' => 'NAURU',
        'NPL' => 'NEPAL',
        'NLD' => 'NETHERLANDS',
        'ANT' => 'NETHERLANDS ANTILLES',
        'NCL' => 'NEW CALEDONIA',
        'NZL' => 'NEW ZEALAND',
        'NIC' => 'NICARAGUA',
        'NER' => 'NIGER',
        'NGA' => 'NIGERIA',
        'NIU' => 'NIUE',
        'NFK' => 'NORFOLK ISLAND',
        'MNP' => 'NORTHERN MARIANA ISLANDS',
        'NOR' => 'NORWAY',
        'OMN' => 'OMAN',
        'PAK' => 'PAKISTAN',
        'PLW' => 'PALAU',
        'PAN' => 'PANAMA',
        'PNG' => 'PAPUA NEW GUINEA',
        'PRY' => 'PARAGUAY',
        'PER' => 'PERU',
        'PHL' => 'PHILIPPINES',
        'PCN' => 'PITCAIRN',
        'POL' => 'POLAND',
        'PRT' => 'PORTUGAL',
        'PRI' => 'PUERTO RICO',
        'QAT' => 'QATAR',
        'REU' => 'REUNION',
        'ROM' => 'ROMANIA',
        'RUS' => 'RUSSIAN FEDERATION',
        'RWA' => 'RWANDA',
        'KNA' => 'SAINT KITTS AND NEVIS',
        'LCA' => 'SAINT LUCIA',
        'VCT' => 'SAINT VINCENT AND THE GRENADINES',
        'WSM' => 'SAMOA',
        'SMR' => 'SAN MARINO',
        'STP' => 'SAO TOME AND PRINCIPE',
        'SAU' => 'SAUDI ARABIA',
        'SEN' => 'SENEGAL',
        'SYC' => 'SEYCHELLES',
        'SLE' => 'SIERRA LEONE',
        'SGP' => 'SINGAPORE',
        'SVK' => 'SLOVAKIA',
        'SVN' => 'SLOVENIA',
        'SLB' => 'SOLOMON ISLANDS',
        'SOM' => 'SOMALIA',
        'ZAF' => 'SOUTH AFRICA',
        'SGS' => 'SOUTH GEORGIA AND SOUTH S.S.',
        'ESP' => 'SPAIN',
        'LKA' => 'SRI LANKA',
        'SHN' => 'ST. HELENA',
        'SPM' => 'ST. PIERRE AND MIQUELON',
        'SDN' => 'SUDAN',
        'SUR' => 'SURINAME',
        'SJM' => 'SVALBARD AND JAN MAYEN ISLANDS',
        'SWZ' => 'SWAZILAND',
        'SWE' => 'SWEDEN',
        'CHE' => 'SWITZERLAND',
        'SYR' => 'SYRIAN ARAB REPUBLIC',
        'TWN' => 'TAIWAN, PROVINCE OF CHINA',
        'TJK' => 'TAJIKISTAN',
        'TZA' => 'UNITED REPUBLIC OF TANZANIA',
        'THA' => 'THAILAND',
        'TGO' => 'TOGO',
        'TKL' => 'TOKELAU',
        'TON' => 'TONGA',
        'TTO' => 'TRINIDAD AND TOBAGO',
        'TUN' => 'TUNISIA',
        'TUR' => 'TURKEY',
        'TKM' => 'TURKMENISTAN',
        'TCA' => 'TURKS AND CAICOS ISLANDS',
        'TUV' => 'TUVALU',
        'UGA' => 'UGANDA',
        'UKR' => 'UKRAINE',
        'ARE' => 'UNITED ARAB EMIRATES',
        'GBR' => 'UNITED KINGDOM',
        'USA' => 'UNITED STATES',
        'UMI' => 'U.S. MINOR ISLANDS',
        'URY' => 'URUGUAY',
        'UZB' => 'UZBEKISTAN',
        'VUT' => 'VANUATU',
        'VEN' => 'VENEZUELA',
        'VNM' => 'VIET NAM',
        'VGB' => 'VIRGIN ISLANDS (BRITISH)',
        'VIR' => 'VIRGIN ISLANDS (U.S.)',
        'WLF' => 'WALLIS AND FUTUNA ISLANDS',
        'ESH' => 'WESTERN SAHARA',
        'YEM' => 'YEMEN',
        'YUG' => 'Yugoslavia',
        'ZMB' => 'ZAMBIA',
        'ZWE' => 'ZIMBABWE');
    return ucwords(strtolower($countries[$iso_contry]));
}