<?php
/**
 * @file
 * Copyright (c) 2015 OBiBa. All rights reserved.
 *
 * This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Implements hook_menu().
 */
function obiba_mica_data_access_request_menu() {
  $items = array();

  $items[MicaClientPathProvider::DATA_ACCESS] = array(
    'title' => variable_get('access_request_page_title', 'Data Access Request'),
    'page callback' => 'obiba_mica_data_access_request_page',
    'access callback' => TRUE,
    'expanded' => TRUE,
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 4,
  );

  $items[MicaClientPathProvider::DATA_ACCESS_HOME] = array(
    'title' => variable_get('access_request_page_title', 'Data Access Request'),
    'description' => 'Data access',
    'access callback' => TRUE,
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 2,
  );

  $items[MicaClientPathProvider::DATA_ACCESS_LIST] = array(
    'title' => variable_get('access_requests_page_title', 'My Data Access Requests'),
    'description' => 'List Data Access Requests',
    'page callback' => 'obiba_mica_data_access_request_list_page',
    'file' => 'obiba_mica_data_access_request_service.inc',
    'access callback' => 'obiba_mica_data_access_request_permission_check',
    'menu_name' => 'main-menu',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 3,
  );

  $items['mica/data-access/requests/ws'] = array(
    'page callback' => 'obiba_mica_data_access_requests_action',
    'access callback' => TRUE,
    'file' => 'obiba_mica_data_access_request_service.inc',
  );

  $items['mica/data-access/request/%/comments/ws'] = array(
    'page callback' => 'obiba_mica_data_access_request_comments_action',
    'access callback' => TRUE,
    'page arguments' => array(3),
    'file' => 'obiba_mica_data_access_request_service.inc',
  );

  $items['mica/data-access/request/%/comment/%/ws'] = array(
    'page callback' => 'obiba_mica_data_access_request_comment_action',
    'access callback' => TRUE,
    'page arguments' => array(3, 5),
    'file' => 'obiba_mica_data_access_request_service.inc',
  );

  $items['mica/data-access/request/%/_pdf/ws'] = array(
    'page callback' => 'obiba_mica_data_access_request_download_pdf',
    'access callback' => TRUE,
    'page arguments' => array(3),
    'file' => 'obiba_mica_data_access_request_service.inc',
  );

  $items['mica/data-access/request/%/attachments/%/_download/ws'] = array(
    'page callback' => 'obiba_mica_data_access_request_attachment',
    'access callback' => TRUE,
    'page arguments' => array(3, 5),
    'file' => 'obiba_mica_data_access_request_service.inc',
  );

  $items['mica/data-access/request/%/_status/%/ws'] = array(
    'page callback' => 'obiba_mica_data_access_request_update_request',
    'access callback' => TRUE,
    'page arguments' => array(3, 5),
    'file' => 'obiba_mica_data_access_request_service.inc',
  );

  $items['mica/data-access/request/upload-file'] = array(
    'page callback' => 'obiba_mica_data_access_request_upload_attachment',
    'access callback' => TRUE,
    'file' => 'obiba_mica_data_access_request_service.inc',
  );

  $items['mica/data-access/request/%/ws'] = array(
    'page callback' => 'obiba_mica_data_access_request_action',
    'access callback' => TRUE,
    'page arguments' => array(3),
    'file' => 'obiba_mica_data_access_request_service.inc',
  );

  $items['mica/data-access/request/file/%'] = array(
    'page callback' => 'obiba_mica_data_access_request_get_attachment',
    'access callback' => TRUE,
    'page arguments' => array(4),
    'file' => 'obiba_mica_data_access_request_service.inc',
  );

  $items['mica/data-access/data-access-form/ws'] = array(
    'page callback' => 'obiba_mica_data_access_request_form_get_config',
    'access callback' => TRUE,
    'file' => 'obiba_mica_data_access_request_service.inc',
  );

  $items['mica/data-access/request/delete/%/ws'] = array(
    'page callback' => 'obiba_mica_data_access_request_delete_request_access',
    'page arguments' => array(4),
    'file' => 'obiba_mica_data_access_request_service.inc',
    'access callback' => TRUE,
  );

  $items['mica/data-access/request/redirect/%/%'] = array(
    'page callback' => 'obiba_mica_data_access_request_redirect',
    'page arguments' => array(4, 5),
    'file' => 'obiba_mica_data_access_request_service.inc',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Callback to check permission.
 *
 * @return bool
 *   TRUE/FALSE Statment.
 */
function obiba_mica_data_access_request_permission_check() {
  return obiba_mica_commons_is_authorized_agate_user();
}

/**
 * Implements hook_load_menus().
 */
function obiba_mica_data_access_request_load_menus() {
  $items = array();

  $items[MicaClientPathProvider::DATA_ACCESS_REQUEST] = array(
    'access callback' => TRUE,
    'title' => variable_get('access_request_page_title', 'Data Access Request'),
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function obiba_mica_data_access_request_theme($existing, $type, $theme, $path) {
  $path_views_theme = $path . '/js/app/views';
  $path_theme = $path . '/templates';

  return array(
    'obiba_mica_data_access_request-form-page' => array(
      'template' => 'obiba_mica_data_access_request-form-page',
      'path' => $path_views_theme,
    ),
    'obiba_mica_data_access_request-view-page' => array(
      'template' => 'obiba_mica_data_access_request-view-page',
      'path' => $path_views_theme,
    ),
    'obiba_mica_data_access_request-histroy-view' => array(
      'template' => 'obiba_mica_data_access_request-histroy-view',
      'path' => $path_views_theme,
    ),
    'data-access-request-validation-modal' => array(
      'template' => 'data-access-request-validation-modal',
      'path' => $path_views_theme,
    ),
    'data-access-request-submitted-modal' => array(
      'template' => 'data-access-request-submitted-modal',
      'path' => $path_views_theme,
    ),
    'obiba_mica_data_access_request-page-data-access' => array(
      'template' => 'obiba_mica_data_access_request-page-data-access',
      'path' => $path_theme,
    ),
    'obiba_mica_data_access_request-list' => array(
      'template' => 'obiba_mica_data_access_request-list',
      'path' => $path_theme,
    ),
  );
}

/**
 * Implements hook_library().
 */
function obiba_mica_data_access_request_library() {
  return obiba_mica_app_angular_load_angular_library();
}

/**
 * Implements hook_library_alter().
 */
function obiba_mica_data_access_request_library_alter(&$javascript, $module) {
  if (($module == 'obiba_mica_data_access_request' || $module == 'system') && current_path() == 'mica/data-access/request') {
    $path = drupal_get_path('module', 'jquery_update');
    jquery_update_jquery_replace($javascript, NULL, $path, NULL, '1.10');
  }

}

/**
 * Create/Update data access request node content page.
 */
function obiba_mica_data_access_request() {
  $data_access_node_node = obiba_mica_commons_get_translated_node(variable_get('access_request_page'));
  drupal_set_title($data_access_node_node['#node']->title);
  if (!empty($data_access_node_node)) {
    return $data_access_node_node;
  }
  else {
    $my_body_content = "<div> <p>Requests for further information on the datasets and requests for access are received by
the our Access Office. Prior to submitting a Data Access Application Form, we strongly recommend that you consult the
our Policy documents, that will provide you with detailed information about the process and our's access, publication
and intellectual property policies.</p> </div>";
    $access_request_node_page = obiba_mica_commons_add_page(variable_get('access_request_page'), $my_body_content);
    variable_set('access_request_page', $access_request_node_page->nid);
    return node_view(node_load(variable_get('access_request_page')));
  }
}

/**
 * Callback to display data access request page.
 */
function obiba_mica_data_access_request_page() {

  $data_access_list_display = FALSE;
  $data_access_register_user = FALSE;

  $node_rendred = obiba_mica_data_access_request();
  drupal_set_title(variable_get_value('access_home_page_title'));

  $node_rendred['#node']->title = '';
  if (user_is_logged_in()) {
    $data_access_list_display = TRUE;
  }
  else {
    $data_access_register_user = TRUE;
  }

  return theme('obiba_mica_data_access_request-page-data-access', array(
    'node_content' => $node_rendred,
    'data_access_list_display' => $data_access_list_display,
    'data_access_register_user' => $data_access_register_user,
  ));
}

/**
 * Implements hook_get_ng_module_to_load().
 */
function obiba_mica_data_access_request_get_ng_module_to_load() {
  if (current_path() == MicaClientPathProvider::DATA_ACCESS_REQUEST) {
    return 'mica.DataAccessRequest';
  }
  return FALSE;
}

/**
 * Implements hook_get_js().
 */
function obiba_mica_data_access_request_get_js() {
  if (current_path() == MicaClientPathProvider::DATA_ACCESS_REQUEST) {
    $module_path = drupal_get_path('module', 'obiba_mica_data_access_request');
    $js = file_scan_directory($module_path . '/js/app', '/.*\.js$/', array('key' => 'name'));
    ksort($js);
    foreach ($js as $file_js) {
      drupal_add_js($file_js->uri, array(
        'type' => 'file',
        'scope' => 'footer',
      ));
    }
  }
}

/**
 * A list data access request in dataTable.
 */
function obiba_mica_data_access_requests_datatable_init() {
  if (drupal_get_library('obiba_mica_dataset', 'datatables')) {
    drupal_add_library('obiba_mica_dataset', 'datatables');
  }
  else {
    obiba_mica_commons_datatables_external_source();
  }

  global $user;
  drupal_add_js(drupal_get_path('module', 'obiba_mica_data_access_request') .
    '/js/obiba_mica_data_access_request_datatable_init.js', 'file');
  drupal_add_js(array(
    'user' => $user,
    'table_headers' => array(
      array("title" => t('ID')),
      array("title" => t('Applicant')),
      array("title" => t('Title'), 'width' => '35%'),
      array("title" => t('Last Update')),
      array("title" => t('Submission Date')),
      array("title" => t('Status')),
      array("title" => t('Actions')),
    ),
    'table_data' => obiba_mica_data_access_request_table_rows(),
  ), 'setting');
}

/**
 * Implements hook_permission().
 */
function obiba_mica_data_access_request_permission() {
  return array(
    "can_see_" . MicaDataAccessRequest::LIST_DATA_ACCESS => array(
      'title' => t('Can view the data access requests list page'),
      'description' => t('Note that this permission does not assume which operations can be performed on each request.'),
    ),
    "can_see_" . MicaDataAccessRequest::NEW_DATA_ACCESS => array(
      'title' => t('Can create a new data access request'),
      'description' => t('Note that this permission can be overruled by permission constraints on Mica server side.'),
    ),
  );
}

/**
 * Function to deal with permitted action.
 */
function obiba_mica_data_access_request_user_permission($action) {
  return user_access('can_see_' . $action);
}

/**
 * Get and format data access request list.
 */
function obiba_mica_data_access_request_table_rows() {

  // Reuse the same translation as the angular app code.
  global $language;
  $js_dictionary_file = drupal_get_path('module', 'obiba_mica_app_angular') . '/i18n/' . $language->language . '.json';
  $js_dictionary = json_decode(file_get_contents($js_dictionary_file), TRUE);
  $requests = (new MicaDataAccessRequests(NULL, 'METHOD_GET'))->getRequests();

  if (empty($requests->responseCode) && !empty($requests)) {
    $res = array_map(
      function ($r) use ($js_dictionary) {
        $r->submission_date = NULL;
        if ($r->status != 'OPENED') {
          foreach ($r->statusChangeHistory as $change) {
            if ($change->to == 'SUBMITTED') {
              $r->submission_date = $change->changedOn;
            }
          }
        }

        $r->full_name = obiba_mica_data_access_request_profile_full_name($r);

        return array(
          l($r->id, 'mica/data-access/request', array('fragment' => '/view/' . $r->id)),
          $r->full_name,
          empty($r->title) ? '' : $r->title,
          date_format(date_create(empty($r->timestamps->lastUpdate) ?
            $r->timestamps->created :
            $r->timestamps->lastUpdate), "Y-m-d H:i:s"),
          empty($r->submission_date) ? '' : date_format(date_create($r->submission_date), "Y-m-d H:i:s"),
          $js_dictionary[$r->status],
          $r->actions,
          $r->id,
        );
      }, $requests);
    return $res;
  }
  return FALSE;
}

/**
 * Get a value attribute.
 */
function obiba_mica_data_access_request_profile_attribute($request, $key) {
  if (!empty($request->profile->attributes)) {
    foreach ($request->profile->attributes as $attr) {
      if ($attr->key == $key) {
        return $attr->value;
      }
    }
  }
  return NULL;
}

/**
 * Get the full name applicant of the data access request.
 */
function obiba_mica_data_access_request_profile_full_name($request) {
  $full_name = $request->applicant;
  $first_name = obiba_mica_data_access_request_profile_attribute($request, 'firstName');
  if (!empty($first_name)) {
    $full_name = $first_name;
  }
  $last_name = obiba_mica_data_access_request_profile_attribute($request, 'lastName');
  if (!empty($last_name)) {
    $full_name = $full_name . ' ' . $last_name;
  }
  $email = obiba_mica_data_access_request_profile_attribute($request, 'email');
  if (!empty($email)) {
    // Cannot do this because it breaks the delete action
    // $full_name =
    // l($full_name, 'mailto:' . $email, array('absolute' => TRUE));
  }
  return $full_name;

}
